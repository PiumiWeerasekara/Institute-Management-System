/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package edu.ijse.gdse43.view;

import edu.ijse.IdGenarater.IdGenarator;
import edu.ijse.gdse43.core.dto.SubjectDTO;
import edu.ijse.gdse43.custom.controller.SubjectController;
import edu.ijse.gdse43.custom.controller.TeacherController;
import edu.ijse.gdse43.core.dto.TeacherDTO;
import edu.ijse.gdse43.util.Validation;
import java.io.IOException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.security.auth.Subject;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author DEll
 */
public class AddTeacherForm extends javax.swing.JPanel {

    /**
     * Creates new form AddTeacherForm
     */
    public AddTeacherForm() throws Exception {

        try {
            initComponents();
            loadSubjectIDs();
            loadTeacherID();
            txtTeacherName.requestFocusInWindow();
            txtTeacherID.setEditable(false);

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(AddTeacherForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(AddTeacherForm.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jXLabel1 = new org.jdesktop.swingx.JXLabel();
        jXLabel22 = new org.jdesktop.swingx.JXLabel();
        jXLabel23 = new org.jdesktop.swingx.JXLabel();
        jXLabel24 = new org.jdesktop.swingx.JXLabel();
        jXLabel25 = new org.jdesktop.swingx.JXLabel();
        jXLabel26 = new org.jdesktop.swingx.JXLabel();
        jXLabel27 = new org.jdesktop.swingx.JXLabel();
        txtTeacherID = new javax.swing.JTextField();
        txtTeacherName = new javax.swing.JTextField();
        txtPhone = new javax.swing.JTextField();
        txtNIC = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        txtAddress = new javax.swing.JTextField();
        SubjectIDComboBox = new javax.swing.JComboBox();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jXLabel1.setBackground(new java.awt.Color(153, 255, 255));
        jXLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 255)));
        jXLabel1.setText("                                               ADD  TEACHER");
        jXLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        add(jXLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 910, 90));

        jXLabel22.setBackground(new java.awt.Color(204, 204, 204));
        jXLabel22.setText("Teacher ID");
        jXLabel22.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        add(jXLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, 113, 25));

        jXLabel23.setBackground(new java.awt.Color(204, 204, 204));
        jXLabel23.setText("Teacher Name");
        jXLabel23.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        add(jXLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, 113, 25));

        jXLabel24.setBackground(new java.awt.Color(204, 204, 204));
        jXLabel24.setText("Phone");
        jXLabel24.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        add(jXLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 180, 113, 25));

        jXLabel25.setBackground(new java.awt.Color(204, 204, 204));
        jXLabel25.setText("Address");
        jXLabel25.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        add(jXLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 210, 113, 25));

        jXLabel26.setBackground(new java.awt.Color(204, 204, 204));
        jXLabel26.setText("Subject");
        jXLabel26.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        add(jXLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 270, 113, 25));

        jXLabel27.setBackground(new java.awt.Color(204, 204, 204));
        jXLabel27.setText("Natiional ID");
        jXLabel27.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        add(jXLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 240, 113, 25));

        txtTeacherID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTeacherIDActionPerformed(evt);
            }
        });
        txtTeacherID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTeacherIDKeyReleased(evt);
            }
        });
        add(txtTeacherID, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 120, 200, -1));

        txtTeacherName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTeacherNameActionPerformed(evt);
            }
        });
        txtTeacherName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTeacherNameKeyReleased(evt);
            }
        });
        add(txtTeacherName, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 150, 200, -1));

        txtPhone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPhoneActionPerformed(evt);
            }
        });
        txtPhone.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPhoneKeyReleased(evt);
            }
        });
        add(txtPhone, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 180, 200, -1));

        txtNIC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNICActionPerformed(evt);
            }
        });
        add(txtNIC, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 240, 200, -1));

        btnAdd.setBackground(new java.awt.Color(0, 0, 102));
        btnAdd.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnAdd.setForeground(new java.awt.Color(255, 255, 255));
        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        add(btnAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 480, 100, 40));

        btnCancel.setBackground(new java.awt.Color(0, 0, 102));
        btnCancel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnCancel.setForeground(new java.awt.Color(255, 255, 255));
        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });
        add(btnCancel, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 480, 100, 40));

        txtAddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAddressActionPerformed(evt);
            }
        });
        add(txtAddress, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 210, 500, -1));

        SubjectIDComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " " }));
        SubjectIDComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                SubjectIDComboBoxItemStateChanged(evt);
            }
        });
        SubjectIDComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubjectIDComboBoxActionPerformed(evt);
            }
        });
        add(SubjectIDComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 270, 200, 30));
    }// </editor-fold>//GEN-END:initComponents

    private void txtTeacherIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTeacherIDActionPerformed
        txtTeacherName.requestFocus();
// TODO add your handling code here:

    }//GEN-LAST:event_txtTeacherIDActionPerformed

    private void txtTeacherNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTeacherNameActionPerformed
        txtPhone.requestFocus();
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTeacherNameActionPerformed

    private void txtPhoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPhoneActionPerformed
       
        txtAddress.requestFocus();
// TODO add your handling code here:
    }//GEN-LAST:event_txtPhoneActionPerformed

    private void txtNICActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNICActionPerformed
        SubjectIDComboBox.requestFocus(); // TODO add your handling code here:
    }//GEN-LAST:event_txtNICActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        try {
            try {
                String subject=SubjectIDComboBox.getSelectedItem().toString();
                SubjectDTO searchSubjectName = SubjectController.searchSubjectName(subject);
                TeacherDTO teacher = new TeacherDTO(
                        txtTeacherID.getText(),
                        txtTeacherName.getText(),
                        txtPhone.getText(),
                        txtAddress.getText(),
                        txtNIC.getText(),
                        searchSubjectName.getSubjectID());

                boolean result = TeacherController.addTeacher(teacher);
              String TeacherName=txtTeacherName.getText();
              
              if (TeacherName.trim().isEmpty()){
            JOptionPane.showMessageDialog(this, "Please enter a Teacher name");
            txtTeacherName.selectAll();
            txtTeacherName.requestFocusInWindow();
            return;
              }
               String Phone=txtPhone.getText();
              
              if (Phone.trim().isEmpty()){
            JOptionPane.showMessageDialog(this, "Please enter a Phone number");
            txtPhone.selectAll();
            txtPhone.requestFocusInWindow();
            return;
              }
               String Address=txtAddress.getText();
              
              if (Address.trim().isEmpty()){
            JOptionPane.showMessageDialog(this, "Please enter a Address");
           txtAddress.selectAll();
            txtAddress.requestFocusInWindow();
            return;
              }
               String NIC=txtNIC.getText();
              
              if (TeacherName.trim().isEmpty()){
            JOptionPane.showMessageDialog(this, "Please enter a NIC");
            txtNIC.selectAll();
            txtNIC.requestFocusInWindow();
            return;
              }
              
            } catch (Exception ex) {
                Logger.getLogger(AddTeacherForm.class.getName()).log(Level.SEVERE, null, ex);
            }
             JOptionPane.showMessageDialog(this,"Teacher has been successfully Added");
            txtTeacherID.setText("");
            txtTeacherName.setText("");
            txtPhone.setText("");
            txtAddress.setText("");
            txtNIC.setText("");
            SubjectIDComboBox.setSelectedItem("");
            txtTeacherID.setText(IdGenarator.getNewID("Teacher", "TeacherID", "T"));
            txtTeacherName.requestFocus();

        } catch (IOException ex) {
            Logger.getLogger(AddTeacherForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(AddTeacherForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(AddTeacherForm.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_btnAddActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        int response = JOptionPane.showConfirmDialog(this, "Are you sure want to cancel");
        if (response == 0) {
            txtTeacherName.setText("");
            txtPhone.setText("");
            txtAddress.setText("");
            txtNIC.setText("");
            SubjectIDComboBox.setSelectedItem("");
            txtTeacherName.requestFocus();
        }else if(response==1){
            
        }else if(response==2){
            
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_btnCancelActionPerformed

    private void txtAddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAddressActionPerformed
        txtNIC.requestFocus();        // TODO add your handling code here:
    }//GEN-LAST:event_txtAddressActionPerformed

    private void SubjectIDComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubjectIDComboBoxActionPerformed
        btnAdd.requestFocus();

    }//GEN-LAST:event_SubjectIDComboBoxActionPerformed

    private void SubjectIDComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_SubjectIDComboBoxItemStateChanged

// TODO add your handling code here:
    }//GEN-LAST:event_SubjectIDComboBoxItemStateChanged

    private void txtTeacherNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTeacherNameKeyReleased
        Validation.name(txtTeacherName);
    }//GEN-LAST:event_txtTeacherNameKeyReleased

    private void txtTeacherIDKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTeacherIDKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTeacherIDKeyReleased

    private void txtPhoneKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPhoneKeyReleased
        Validation.phoneNumber(txtPhone);
    }//GEN-LAST:event_txtPhoneKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox SubjectIDComboBox;
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnCancel;
    private org.jdesktop.swingx.JXLabel jXLabel1;
    private org.jdesktop.swingx.JXLabel jXLabel22;
    private org.jdesktop.swingx.JXLabel jXLabel23;
    private org.jdesktop.swingx.JXLabel jXLabel24;
    private org.jdesktop.swingx.JXLabel jXLabel25;
    private org.jdesktop.swingx.JXLabel jXLabel26;
    private org.jdesktop.swingx.JXLabel jXLabel27;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtNIC;
    private javax.swing.JTextField txtPhone;
    public static javax.swing.JTextField txtTeacherID;
    private javax.swing.JTextField txtTeacherName;
    // End of variables declaration//GEN-END:variables

    private void loadSubjectIDs() throws ClassNotFoundException, SQLException, Exception {
        try {
            ArrayList<SubjectDTO> SubjectIDs = SubjectController.getAllSubjects();
            for (SubjectDTO SubjectID : SubjectIDs) {

                SubjectIDComboBox.addItem(SubjectID.getSubjectName());
            }
        } catch (IOException ex) {
            Logger.getLogger(AddTeacherForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void loadTeacherID() {
        try {
            txtTeacherID.setText(IdGenarator.getNewID("Teacher", "TeacherID", "T"));
        } catch (IOException ex) {
            Logger.getLogger(AddTeacherForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(AddTeacherForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(AddTeacherForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

}
